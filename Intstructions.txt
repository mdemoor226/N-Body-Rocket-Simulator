WHAT TO DO ONCE PROGRAM IS STARTED:
The program will start by asking for the MAXIMUM time you're willing to wait until Rocket Launch. You will enter the time in days, hours, and then minutes. 
Afterwards, you will be asked the time resolution to divide up the launch waiting time among all processes. That is, each process will have a different 
launch time depeding on the size of the discrete timestep determined by dividing the maximum waiting time by the time resolution.

Then you will do the same thing with the respect to the travel time. This will be constant across all processes.

Next, you will be asked how you would like to specify the possible launch angles. Launch angles are with respect to the origin of the launch Planet. Later on after
a launch planet has been specified, the Rocket will be placed on the surface of the launch planet pointing in the direction determined by the launch angles.
You have two options: You can specify a grid of possible launch directions, or you can manually enter every possible direction/point. 

The Launch angles consist of Theta: horizontal angle describing an object's position with respect to the x-z plane (+z pointing out of the screen, -z pointing in), and Phi: vertical angle describing
an object's position with respect to the y axis.

If you select grid then you will be prompted for maximum and minimum values for Theta and Phi. You will also be asked to enter a resolution (same as above) to divide them up among all the processes.
if you select points you will continue to enter Theta and Phi values until you enter 'done'.

After this is done you will be prompted to build a simulation profile. This profile will contain the names, mass values, radius values, initial positions, and initial velocities of every single
planet, star, black hole, moon, and so on that you want to simulate. This is a separate C++ program that will allow you to tweak your own simulation settings before exporting them to Open MPI.
A list of commands can be found by tpying 'help'. In a nutshell this program is the workbench that gives you the power to create, test, and tweak the simulation that you want every Open MPI
node to run.

You can add, remove, edit, and simulate whatever celestial objects you want. However, in order to upload a simulation profile that will be used by Open MPI you need to first add a Rocket.
Create a Celestial Object and name it 'Rocket'. You will then be asked to specify a launch planet (default is Earth). Afterwards you need to specify the Rocket's mass (assumed to be constant
in this simulation), Radius (each simulation object is a sphere), some launch angles (These are for testing purposes only. They will not be exported with the rest of the Rocket's paramters),
and Initial escape speed of the Rocket. 

You can then run simulations to test if these are the Rocket parameters you want. Once finshed, if you haven't done so already you will need to set some default simulation paramters. The 
default h, hmin, hmax, and error tolerance values specified here will be used across all simulations. 

Finally you will type 'exit' to upload your simulation profile. You will be displayed the values of every celestial object and asked if you're ok with them. If yes you will then enter the 
name of the target object to shoot for. Once done, you will be asked one last time if you would like to run a final simulation to test out the full profile. When satisfied, the simulation
profile will be uploaded and Open MPI will be called.

FINALLY
Wait until every simulation is finished so the best possible input parameters can be reported back to you by the master node.
